server.port=8080
spring.application.name=fenbiao_a
spring.server.servlet.context-path=/
#如果bean重复，则覆盖
spring.main.allow-bean-definition-overriding=true
#驼峰式
mybatis.configuration.map-underscore-to-camel-case=true
#数据源
spring.shardingsphere.datasource.names=m1
#
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/sharding?characterEncoding=utf-8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=root
#数据分表规则
#指定所需分的表
spring.shardingsphere.sharding.tables.t_order_.actual-data-nodes=m1.t_order_$->{1..2}
#指定主键
spring.shardingsphere.sharding.tables.t_order_.table-strategy.inline.sharding-column=order_id
#分表规则为主键除以2取模
spring.shardingsphere.sharding.tables.t_order_.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2+1}
#指定主键
spring.shardingsphere.sharding.tables.t_order_.key-generator.column=order_id
# 使用SNOWFLAKE算法生成主键
spring.shardingsphere.sharding.tables.t_order_.key-generator.type=SNOWFLAKE
#打印sql
spring.shardingsphere.props.sql.show=true
swagger.enable=true
logging.level.root=info
logging.level.org.springframework.web=info
logging.level.druid.sql=debug