server.port=8080
spring.application.name=fenku_a
spring.server.servlet.context-path=/
#如果bean重复，则覆盖
spring.main.allow-bean-definition-overriding=true
#驼峰式
mybatis.configuration.map-underscore-to-camel-case=true
#定义多个数据源
spring.shardingsphere.datasource.names=user0,m1,m2
#
spring.shardingsphere.datasource.user0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.user0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.user0.url=jdbc:mysql://localhost:3306/user_db?characterEncoding=utf-8
spring.shardingsphere.datasource.user0.username=root
spring.shardingsphere.datasource.user0.password=root
#
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/order_db_1?characterEncoding=utf-8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=root
#
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/order_db_2?characterEncoding=utf-8
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=root
#定义分库策略，以user_id为分片键
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=m$->{user_id%2+1}
#数据分表规则
spring.shardingsphere.sharding.tables.t_order_.actual-data-nodes=m$->{1..2}.t_order_$->{1..2}
spring.shardingsphere.sharding.tables.t_order_.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2+1}
spring.shardingsphere.sharding.tables.t_order_.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order_.key-generator.type=SNOWFLAKE
#数据分表规则
spring.shardingsphere.sharding.tables.sys_user.actual-data-nodes=user0.sys_user
spring.shardingsphere.sharding.tables.sys_user.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.sys_user.table-strategy.inline.algorithm-expression=sys_user
spring.shardingsphere.sharding.tables.sys_user.key-generator.column=id
spring.shardingsphere.sharding.tables.sys_user.key-generator.type=SNOWFLAKE
# 指定t_dict为公共表
spring.shardingsphere.sharding.broadcast-tables=sys_dict
#打印sql
spring.shardingsphere.props.sql.show=true
swagger.enable=true
logging.level.root=info
logging.level.org.springframework.web=info
logging.level.druid.sql=debug
