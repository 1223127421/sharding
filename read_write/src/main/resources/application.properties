server.port=8080
spring.application.name=read_write
spring.server.servlet.context-path=/
#如果bean重复，则覆盖
spring.main.allow-bean-definition-overriding=true
#驼峰式
mybatis.configuration.map-underscore-to-camel-case=true
#定义多个数据源
spring.shardingsphere.datasource.names=master,slave
#
spring.shardingsphere.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master.url=jdbc:mysql://localhost:3306/read_write?characterEncoding=utf-8
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=root
#
spring.shardingsphere.datasource.slave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.slave.url=jdbc:mysql://localhost:3307/read_write?characterEncoding=utf-8
spring.shardingsphere.datasource.slave.username=root
spring.shardingsphere.datasource.slave.password=root
# 主库从库逻辑数据源定义 ds0为user_db
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=master
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=slave
# sys_user分表策略，固定分配至ds0的sys_user真实表
spring.shardingsphere.sharding.tables.sys_user.actual-data-nodes=ds0.sys_user
#打印sql
spring.shardingsphere.props.sql.show=true